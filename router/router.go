package router

import (
	"myGram/controllers"
	_ "myGram/docs" //docs is generated by Swag CLI, you have to import it.
	"myGram/middleware"

	"github.com/gin-gonic/gin"
	swaggerfiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @title myGram
// @version 1.0
// @description API simpel dengan konsep seperti instagram
// @termOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email soberkoder@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/license/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /
func StartApp() *gin.Engine {
	r := gin.Default()

	userRouter := r.Group("/users")
	{
		userRouter.POST("/register", controllers.UserRegister)
		userRouter.POST("/login", controllers.UserLogin)
	}
	photoRouter := r.Group("/photos")
	{
		photoRouter.Use(middleware.Authentication())
		photoRouter.POST("/", controllers.CreatePhoto)
		photoRouter.GET("/:photoId", controllers.GetPhotoById)
		photoRouter.PUT("/:photoId", middleware.PhotoAuthorization(), controllers.UpdatePhoto)
		photoRouter.DELETE("/:photoId", middleware.PhotoAuthorization(), controllers.DeletePhoto)
		photoRouter.GET("/", controllers.GetAllPhoto)
		commentRouter := photoRouter.Group("/:photoId/comments")
		{
			commentRouter.Use(middleware.Authentication())
			commentRouter.POST("/", controllers.CreateComment)
			commentRouter.GET("/:commentId", controllers.GetCommentById)
			commentRouter.PUT("/:commentId", middleware.CommentAuthorization(), controllers.UpdateComment)
			commentRouter.DELETE("/:commentId", middleware.CommentAuthorization(), controllers.DeleteComment)
			commentRouter.GET("/", controllers.GetAllComment)
		}
	}
	socMedRouter := r.Group("/socMed")
	{
		socMedRouter.Use(middleware.Authentication())
		socMedRouter.POST("/", controllers.CreateSocMed)
		socMedRouter.GET("/:socialMediaId", controllers.GetSocialMediaById)
		socMedRouter.PUT("/:socialMediaId", middleware.SocMedAuthorization(), controllers.UpdateSocialMedia)
		socMedRouter.DELETE("/:socialMediaId", middleware.SocMedAuthorization(), controllers.DeleteSocialMedia)
		socMedRouter.GET("/", controllers.GetAllSocialMedia)
	}
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerfiles.Handler))

	return r
}
